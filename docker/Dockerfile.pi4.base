FROM balenalib/raspberrypi4-64-debian:buster AS base

RUN [ "cross-build-start" ]

ENV DEBIAN_FRONTEND=noninteractive
ENV TF_CPP_MIN_LOG_LEVEL=2

# Install basic packages
RUN install_packages \
    ca-certificates \
    wget \
    unzip \
    gnupg2 \
    libgeos-c1v5 libgeos-3.7.1 \
    python3-pip \
    && python3 -m pip install --upgrade \
        pip \
        setuptools \
        wheel

#
# Use the previous stage as a new temporary stage for building libraries
#
FROM base AS builder-wheels

LABEL watsor.builder="watsor.pi4.base.builder"

# Build Wheel archives for the requirements and dependencies
RUN install_packages \
    build-essential \
    python3-dev \
    libgeos-dev \
    && python3 -m pip wheel --wheel-dir=/tmp/install \
        numpy \
        scipy \
        opencv-python-headless \
        PyYaml \
        cerberus \
        shapely \
        werkzeug \
        paho-mqtt \
        https://github.com/google-coral/pycoral/releases/download/release-frogfish/tflite_runtime-2.5.0-cp37-cp37m-linux_aarch64.whl
        
#FROM base AS builder-ffmpeg
#
#LABEL watsor.builder="watsor.pi4.base.builder.ffmpeg"
#
## Build latest userland tools and FFmpeg with hardware acceleration support
#RUN install_packages \
#    libx264-dev \
#    libx265-dev \
#    cmake \
#    git \
#    gcc-arm* \
#    g++-arm* \
#    pkg-config
#
#RUN cd /opt && \
#    git clone --depth 1 https://github.com/raspberrypi/userland.git && \
#    mkdir -p userland/build/arm-linux/release && \
#    cd userland/build/arm-linux/release && \
#    cmake \
#        -DCMAKE_TOOLCHAIN_FILE="../../../makefiles/cmake/toolchains/aarch64-linux-gnu.cmake" \
#        -DCMAKE_BUILD_TYPE="Release" \
#        -DARM64="ON" \
#        -DCMAKE_INSTALL_PREFIX="/opt/vc" \
#        -DCMAKE_INSTALL_RPATH='${CMAKE_INSTALL_PREFIX}/lib' \
#        ../../.. && \
#    make -j"$(nproc)" install
#
#RUN cd /opt && \
#    FFMPEG_VERSION=4.2.2 && \
#    wget http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz && \
#    tar zxf ffmpeg-${FFMPEG_VERSION}.tar.gz && \
#    rm ffmpeg-${FFMPEG_VERSION}.tar.gz && \
#    cd ffmpeg-${FFMPEG_VERSION} && \
#    ./configure \
#        --arch="aarch64" \
#        --target-os="linux" \
#        --prefix="/usr/local" \
#        --enable-cross-compile \
#        --toolchain=hardened \
#        --enable-gpl \
#        --enable-nonfree \
#        --enable-avresample \
#        --enable-libx264 \
#        --enable-libx265 \
#        --enable-omx \
#        --enable-omx-rpi \
#        --enable-v4l2_m2m \
#        --enable-mmal \            https://github.com/raspberrypi/userland/issues/630
#        --enable-neon \
#        --enable-shared \
#        --disable-static \
#        --disable-debug \
#        --disable-doc \
#        --disable-ffplay \
#        --extra-cflags="-I/usr/local/include \
#                        -I/opt/vc/include \
#                        -I/opt/vc/include/IL" \
#        --extra-ldflags="-Wl,-rpath-link,/opt/vc/lib \
#                         -Wl,-rpath,/opt/vc/lib" && \
#    make -j"$(nproc)" install

#
# Copy libraries to the final image
#
FROM base AS result

COPY --from=builder-wheels /tmp/install /tmp/install

# Install Wheel archives built at previous stage
RUN python3 -m pip install --upgrade /tmp/install/* \
    && rm -r /tmp/install

# Install FFmpeg
RUN install_packages \
    ffmpeg

# Install the Edge TPU runtime
RUN echo "deb https://packages.cloud.google.com/apt coral-edgetpu-stable main" | tee /etc/apt/sources.list.d/coral-edgetpu.list \
    && wget -q -O - https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \
    && install_packages \
       libedgetpu1-std \
       python3-pycoral

# Enable udevd in the container to get rid of "Error in device opening" for the Coral USB Accelerator.
# The container also need to be run privileged, so we leave the default root user.
ENV UDEV=1
RUN echo 'SUBSYSTEM=="usb", ATTRS{idVendor}=="1a6e", GROUP="plugdev"' >> /etc/udev/rules.d/99-tpu.rules \
    && echo 'SUBSYSTEM=="usb", ATTRS{idVendor}=="18d1", GROUP="plugdev"' >> /etc/udev/rules.d/99-tpu.rule

# Dedicated user
RUN mkdir /etc/watsor /usr/share/watsor /var/log/watsor && \
    addgroup -gid 1001 watsor && \
    adduser -uid 1001 -gid 1001 -gecos watsor -home /usr/share/watsor --no-create-home --disabled-password watsor && \
    usermod -a --groups video,plugdev watsor && \
    chown -R watsor /etc/watsor /usr/share/watsor /var/log/watsor

# Download object detection models
RUN mkdir model && \
    wget -q https://github.com/google-coral/test_data/raw/master/ssdlite_mobiledet_coco_qat_postprocess_edgetpu.tflite -O model/edgetpu.tflite --trust-server-names && \
    wget -q https://storage.googleapis.com/download.tensorflow.org/models/tflite/coco_ssd_mobilenet_v1_1.0_quant_2018_06_29.zip -O model/cpu.zip && \
    unzip model/cpu.zip detect.tflite -d model && \
    mv model/detect.tflite model/cpu.tflite && \
    rm model/cpu.zip && \
    mv model /usr/share/watsor/model && \
    chown -R watsor:watsor /usr/share/watsor/model

EXPOSE 8080

RUN [ "cross-build-end" ]
